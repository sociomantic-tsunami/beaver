#!/bin/sh
# Copyright sociomantic labs GmbH 2017.
# Distributed under the Boost Software License, Version 1.0.
# (See accompanying file LICENSE.txt or copy at
# http://www.boost.org/LICENSE_1_0.txt)
#
# Report code coverage to codecov for D projects, it is a wrapper on the beaver
# codecov script but adds more default options on top of it and collects
# reports automatically (so you don't have to pass BEAVER_CODECOV_REPORTS).
set -eu

# Default coverage directory
export BEAVER_CODECOV_REPORTS="${BEAVER_CODECOV_REPORTS:-build/last/tmp/cov}"

# First check if there are any reports at all
if test -z "$(ls -A "$BEAVER_CODECOV_REPORTS")"
then
    echo "No reports found" >&2
    exit 0
fi

# Paths
r="$(readlink -f $(dirname $0)/../..)"
beaver="$r/bin/beaver"

# Use general dlang utilities
. $r/lib/dlang.sh

# Set the DC and DVER environment variables and export them to docker
set_dc_dver

# Export D related environment variables
dlang_vars="DIST DMD DC DVER D2_ONLY F V"
export BEAVER_DOCKER_VARS="${BEAVER_DOCKER_VARS:-} $dlang_vars"

# Build codecov flags
flags=
for flag in "flavour_$F" "dist_$DIST" "dmd_$DMD"
do
    # Codecov only accepts flags that match ^[\w\,]+$
    flag="$(echo "$flag" | sed -r 's/\W/_/g')"
    if test -z "$flags"
    then
        flags="-F $flag"
    else
        flags="$flags,$flag"
    fi
done

# Run codecov in the confined environment
"$beaver" codecov -e DIST,DMD,DC,F $flags -X gcov -X coveragepy -X xcode "$@"
